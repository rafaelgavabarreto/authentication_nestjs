rules:
  "@typescript-eslint/explicit-function-return-type": "off"
  "@typescript-eslint/explicit-module-boundary-types": "off"
  "@typescript-eslint/no-explicit-any": "off"
  "prettier/prettier":
    - warn
    - tabWidth: 2
      singleQuote: false
      doubleQuote: true
      backslash: true
      semi: true
      trailingComma: all
      arrowParens: always
      printWidth: 80
      bracketSpacing: true
    - usePrettierrc: true
  "@typescript-eslint/ban-types":
    - error
    - types:
        String: true
        Boolean: true
        Number: true
        Symbol: true
        "{}": false
        Object: false
        object: false
        Function: true
      extendDefaults: true
  "@typescript-eslint/quotes":
    - error
    - double
    - avoidEscape: true
      allowTemplateLiterals: true
  "@typescript-eslint/naming-convention":
    - error
    - selector: default
      format:
        - camelCase
        - snake_case
      leadingUnderscore: allow
      trailingUnderscore: allow
    - selector: variable
      format:
        - camelCase
        - snake_case
      leadingUnderscore: allow
      trailingUnderscore: allow
    - selector: variable
      format:
        - camelCase
        - UPPER_CASE
      modifiers:
        - global
      leadingUnderscore: allow
      trailingUnderscore: allow
    - selector: variable
      modifiers:
        - destructured
      format: null
    - selector: objectLiteralProperty
      format: null
    - selector: typeLike
      format:
        - PascalCase
    - selector: memberLike
      modifiers:
        - private
      format:
        - camelCase
      leadingUnderscore: require
    - selector: parameter
      format:
        - camelCase
        - snake_case
      leadingUnderscore: allow
    - selector: function
      format:
        - camelCase
      leadingUnderscore: allow
    - selector: classProperty
      format:
        - camelCase
      leadingUnderscore: allow
    - selector: enumMember
      format: null
    - selector: typeProperty
      format: null
    - selector: method
      format:
        - camelCase
      leadingUnderscore: allow
    - selector: interface
      format:
        - PascalCase
      custom:
        regex: "^I[A-Z]"
        match: false
    - selector: enum
      format:
        - PascalCase
      custom:
        regex: "^I[A-Z]"
        match: false
  curly:
    - error
  eqeqeq:
    - error
  arrow-parens:
    - error
    
ignorePatterns:
  - "*.js"
  - dist
  - test
  - envs
